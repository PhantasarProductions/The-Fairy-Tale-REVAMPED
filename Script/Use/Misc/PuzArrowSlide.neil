// License Information:
// src/Tricky Script/Script/Use/Misc/PuzArrowSlide.neil
// Version: 22.01.29
// Copyright (C) 2017, 2022 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module 

	Table ArrowDir = {}
	Int Arrow_playernum
	string Arrow_Player
	
	string arrowslide_enter = "EnterPuzzle"
	
	readonly delegate rand = math.random
	delegate StartFunction

	Void Enter()
		if gv.gbool[sprintf("crackpuzzle.%s[%s]",gv.gstr.LoadedMap,Map.Layer)]
			CSay("Puzzle rejected! Already solved here!")
		End
		String wind = arrowdir[Map.Layer] or "North"
		Map.Pop("Puz_",arrowdir[Map.Layer] or "North",true)
		arrow_playernum = rand(1,4)
		arrow_player = "PLAYER"..arrow_playernum
		if arrow_playernum==1 
			arrow_player="PLAYER" 
		end
		//--Var.D('$CRACKPLAYER',arrow_player)
			Graphics.Cls()
        	Map.DrawScreen()
        	Image.Obtain("LOADING").Draw(Screen.W div 2,Screen.H div 2)
        	Events.Poll()
        	//FPS.WaitMinTicks()
        	//-- Image.SetAlphaPC(100)
        	Graphics.Flip()
		State.Load("FLOW_CRACKPUZ","Script/Flow/Mini/ArrowSlideF.neil") //MS.Load("CRACKPUZ","Script/Flow/ArrowSlide.lua")
		//-- Actors.WalkToSpot(arrow_player,"Puz_Start")
		//-- TurnPlayers(arrowdir[Map.Layer] or "North")
		//LAURA.Flow("CRACKPUZ");
		Flow.Current="CRACKPUZ"
		Invoke(StartFunction) //(arrowslide_startfunction or Nothing)()
		//--[[
		//local PL = Actors.Actor(arrow_player)
		//local ST = Maps.Obj.Obj("Puz_Start")
		//Actors.StopWalking(arrow_player)
		//Actors.StopMoving(arrow_player)
		//PL.X = ST.X
		//PL.Y = ST.Y
		//]]
		//--[[
		//Maps.Obj.Kill('PLAYER')
		//for i=1,3 do
        //if RPG.PartyTag(i)~="" then Maps.Obj.Kill("PLAYER"..i) end
        //end
        //SpawnPlayer('Puz_Start',wind)
        //]]
        Map.Spawn("CRACKPLAYER","Puz_Start") //Actors.Spawn('Puz_Start','GFX/Actors/Bundled/Player','CRACKPLAYER')
        Map.SetObj("CRACKPLAYER", "Texture", "GFX/Actors/Bundled/Player/"..RPGParty[arrow_playernum].."."..wind..".jpbf")  //Actors.ChoosePic("CRACKPLAYER",upper(RPG.PartyTag(arrow_playernum).."."..wind))
        gv.gstr.CrackChar = RPGParty[arrow_playernum]:upper() //Var.D("$CRACKCHAR",upper(RPG.PartyTag(arrow_playernum)))
        //for i=1000,0,-25 do
        For i=255,0,-1
        	//Actors.Actor("PLAYER" ).SetAlpha(i)
        	//Actors.Actor("PLAYER1").SetAlpha(i)
        	//Actors.Actor("PLAYER2").SetAlpha(i)
        	//Actors.Actor("PLAYER3").SetAlpha(i)
        	Map.SetObj("PLAYER","Alpha",i)
        	for j=2,4
        		Map.SetObj("PLAYER"..j,"Alpha",i)
        	End
        	Graphics.Cls()
        	Map.DrawScreen()
        	Events.Poll()
        	FPS.WaitMinTicks()
        	//-- Image.SetAlphaPC(100)
        	Graphics.Flip()
        end
        //--[[
        //ActorRepos("PLAYER","Puz_Jake",wind,RPG.PartyTag(0))
        //ActorRepos("PLAYER1","Puz_Marrilona",wind,RPG.PartyTag(1))
        //ActorRepos("PLAYER2","Puz_Dandor",wind,RPG.PartyTag(2))
        //ActorRepos("PLAYER3","Puz_HandoStillor",wind,RPG.PartyTag(3))
        //ActorRepos(arrow_player,"Puz_Start",wind,RPG.PartyTag(arrow_playernum))
        //]]
        //MS.Run("CRACKPUZ","InitPuzzle")
        State.Call("FLOW_CRACKPUZ","InitPuzzle","nil")
	end

	//function arrowslide_onload(startfunction)
	Void Load(Delegate _StartFunction)
		ZA.Enter("Enter",arrowslide_enter)
		startfunction = _startfunction
	End    
End