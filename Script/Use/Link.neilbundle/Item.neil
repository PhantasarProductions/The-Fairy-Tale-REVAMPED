// License Information:
// src/Tricky Script/Script/Use/Link.neilbundle/Item.neil
// Version: 21.08.11
// Copyright (C) 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Var IndexTypes
Table __TagIndex(s,string Key)
	Static Table Ret = {}
	Key = Key:upper()
	if !ret[Key]
		Var __ItemIndex(s,string Key2)
			Key2 = Key2:upper()
			State.LoadNew("SUB_ITEMS","Script/Subs/SubItems.Neil")
			IndexTypes = IndexTypes || NeilUse("Script/Use/Misc/ItemIndexTypes")
			Lua.assert(IndexTypes[Key2],"There is no field named "..Key2.." in the item database! ("..Key..")")
			Return ISGET[IndexTypes[Key2]]("SUB_ITEMS",sprintf("ItemField('%s','%s')",Key,Key2))
		End
		Ret[Key] = Lua.setmetatable({},{["__index"]=__ItemIndex})
	End
	return Ret[Key]
End

Return Lua.setmetatable({},{["__index"]=__TagIndex})