// License Information:
// src/Tricky Script/Script/Use/Link.NeilBundle/gv.Neil
// Version: 21.02.04
// Copyright (C) 2020, 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
table lgvstr
table lgvint
table lgvbool

void gvLoaded()
	State.LoadNew("GV","Script/Subs/SubGV.Neil")
end

//defmeta lgvstr
quickmeta gvstr
	index
	//index = string(string k)
		gvLoaded()
		return ISGET.Str("GV","sgvstring["..chr(34)..key:upper()..chr(34).."] or "..chr(34)..chr(34)) or ""
	end
	
	newindex
	//newindex = void(string key,string value)
		gvLoaded()
		cout("string ",key," = ",value,"\n")
		State.Call("GV","SetGVString",chr(34)..key..chr(34)..","..chr(34)..value..chr(34))
	end
end

//const global table gvstr = lgvstr


//defmeta lgvint
quickmeta gvint
	index	
	//index = int(string k)
		string k = key
		gvLoaded()
		var r = ISGET.Integer("GV","sgvint["..chr(34)..(k:upper())..chr(34).."] or 0") or 0
		// cout ("Get int ",k," >> ",r,"\n")
		return r
	end
	//newindex = void(string k,int v)
	newindex
		gvLoaded()
		State.Call("GV","SetGVInt",chr(34) .. key .. Chr(34).."," .. value)
	end
end

//const global table gvint = lgvint



//defmeta lgvbool
quickmeta gvbool
	index
	//index = bool(string k)
		gvLoaded()
		return ISGET["Bool"]("GV","sgvbool["..chr(34)..key:upper()..chr(34).."]==true")
	end
	newindex
	//newindex = void(string k,bool v)
		gvLoaded()
		State.Call("GV","SetGVBoolean",chr(34)..key..chr(34)..","..tostring(value))
	end
end

//const global table gvbool = lgvbool


quickmeta Done
	index
		bool ret = gvbool[key]
		gvbool[key] = true
		return ret
	end
	newindex
		Lua.Apollo_Panic("Done is read-only!")
	end
end

// debug only
global void ShowGV()
	gvLoaded()
	State.Call("GV","ShowEm","nil")
end


init
	// ???
	print ( "GV loaded in: " , ApolloState.Name )
end



quickmeta ablused
	index
		string k = key:upper()
		if k=="UNIWENDICKA"
			k="WENDICKA"
		end
		return gvInt["ABLUSED_"..k]
	end
	newindex
		string k = key:upper()
		if k=="UNIWENDICKA"
			k="WENDICKA"
		end
		gvInt["ABLUSED_"..k] = value
	end
end


module
	readonly table vBool = gvbool
	readonly table gBool = gvBool
	readonly table vStr = gvstr
	readonly table vString = gvstr
	readonly table gString = gvstr
	readonly table vInt = gvint
	readonly table gInt = gvInt	
	readonly table Done = Lua.Neil.Globals.Done
	
	string Sub(string a)
		gvLoaded()
		return ISGET["String"]("GV","Substitute(\""..SafeString(a).."\")")
	end
	
	void Save()
		gvLoaded()
		State.Call("GV","SaveGV","nil")
	end
	
	void Clear()
		gvLoaded()
		State.Call("GV","ClearGV","nil")
	end
end