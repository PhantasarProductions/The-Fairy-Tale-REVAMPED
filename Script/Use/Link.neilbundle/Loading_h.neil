// License Information:
// src/Tricky Script/Script/Use/Link.neilbundle/Loading_h.neil
// Version: 21.12.21
// Copyright (C) 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

Delegate _CSayF

Void LoadLoading()
	_CSayF = Lua.Neil.Globals.CSayF
	_CSayF("Loading the SubProgress")
	State.LoadNew("SUB_LOADING","Script/Subs/SubProgress.neil")
	_CSayF("Loaded")
End

void L_Create(String Tag,Int Max,int R=255,int G=180, B=0)
	//LoadLoading()	
	_CSayF("Create Progessbar >> '%s',%d,%d,%d,%d",Tag,Max,R,G,B)
	State.Call("SUB_LOADING","ProgressBar.Create",sPrintF("'%s',%d,%d,%d,%d",Tag,Max,R,G,B))
	_CSayF("Progress Bar '%s' created",Tag)
End

Void L_Kill(String Tag)
	LoadLoading()
	State.Call("SUB_LOADING","ProgressBar.Kill",sPrintF("'%s'",Tag))
	_CSayF("Progress Bar '%s' released for destruction",Tag)
End

QuickMeta Progress
	Index
		LoadLoading()
		_CSayF("Want:   Progress.%s",Key)
		Switch key:upper()
			Case "CREATE" "MAKE" "NEW"
				_CSayF("Creation function wanted")
				return L_Create
			Case "KILL" "DEL" "DELETE"
				_CSayF("Kill function wanted")
				return L_Kill
			Default
				_CSayF("Getting progress value of '%s'",Key)
				return ISGET.Int("SUB_LOADING",SprintF("ProgressBar.Register.%s.CurrentValue",key:upper()))				
		End
	End
	
	NewIndex
		LoadLoading()
		_CSayF("Definine value %d on progress bar: %s",value,key)
		State.Call("SUB_LOADING",sprintf("ProgressBar.Register.%s.Define",key:upper()),sprintf("%d",value))
		_CSayF("Definition complete!")
	End
End

Global Void Loading()
	LoadLoading()
	State.Call("SUB_LOADING","ProgressBar.LDNG","1")
End

Global Void ConfiguringData()
	LoadLoading()
	State.Call("SUB_LOADING","ProgressBar.LDNG","2")
End