// License Information:
// src/Tricky Script/Script/Use/Anyway.neilbundle/Dev.neil
// Version: 21.03.03
// Copyright (C) 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
#define Development

global void CSay(string message)
	#if Development
		//print("\x1b[34,1m"..message.."\x1b[0m")			
		//CWrite(message,0,180,255,false)
		if State.Has("FLOW_CONSOLE")
			State.Call("FLOW_CONSOLE","CLine.Write","\""..message.."\", 0xff, 0xbf, 0x00")	
		end
		cout("CSAY>\x1b[34;1m",message,"\x1b[0m\n")
	#fi
end
	
global void CSayF(string fmt,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)
	CSay(SPrintF(fmt,Expand({a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z})))
end

module

	readonly int leftshift = Events.KeyByName("Left Shift")
	readonly int rightshift = Events.KeyByName("Right Shift")
	readonly int kp_minus = Events.KeyByName("Keypad -")


	get bool indev
		#if Development
			return true
		#else
			return false
		#fi
	end
	
	get bool inrelease
		return not indev
	end
	
	void CWrite(string message,byte r=255, byte g=255,byte b=255,bool cli=true)
		#if Development
			if cli
				print("CWRITE>",message)
			end
			State.Call("FLOW_CONSOLE","CLine.Write","\""..message.."\", "..r..", "..g..", "..b)	
		#fi
	end
		
	
	void ToConsole()
		// print("ToConsole:",indev , LeftShift,Events.KeyDown(LeftShift) , RightShift,Events.KeyDown(RightShift) , KP_Minus,Events.KeyDown(KP_Minus) )
		if indev and Events.KeyDown(LeftShift) and Events.KeyDown(RightShift) and Events.KeyDown(KP_Minus)
			State.Call("FLOW_CONSOLE","CLine.SetRetFlow","\""..ApolloState.Name.."\"")
			Flow.GoToFlow("CONSOLE")
		end
	end
	
	void CommandCallBack(string _opdracht,table para)
		string Opdracht = "CONSOLE_".._opdracht
		if GlobalExists(opdracht)
			Lua.Neil.Globals[opdracht](para)
		else
			CWrite("ERROR! Command '".._opdracht.."' not understood!",255,0,0)
		end
	end
	

end


init
	#if Development
		State.LoadNew("FLOW_CONSOLE","Script/Flow/FlowConsole.neil")
	#endif	
end