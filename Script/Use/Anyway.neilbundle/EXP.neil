// License Information:
// src/Tricky Script/Script/Use/Anyway.neilbundle/EXP.neil
// Version: 21.07.23
// Copyright (C) 2016, 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

// Adapted script from the original game

Module
	//--[[ Not working the way I want. Too large numbers already on low levels.
	// minlevel = 2,
	// minexp   = 10,
	// maxlevel = 5000,
	// maxexp   = 1000000000
	// --]]
    ReadOnly Int minlevel = 2
    ReadOnly Int maxlevel = 300
    ReadOnly Int startexp = 15                                                                                                            
    
    Int ByLevel(Int lvl)
    	// --[[
    	// local rng = self.maxlevel - self.minlevel
    	// assert(rng>0,"Invalid exp settings")
    	// if lvl==self.minlevel then return self.minexp end
    	// if lvl==self.maxlevel then return self.maxexp end
    	// local bexp = self.maxexp/rng
    	// local ret  = math.ceil(bexp*lvl)
    	// return ret
    	// ]]
    	Lua.assert(lvl>=self.minlevel,"Invalid level")
    	Number ret = startexp
    	For i=self.minlevel,lvl
    		ret = ret + ret/7.5
        	If ret>2000000000
        		// Above 2 billion systems and underlying APIs will malfunction.
        		Return 2000000000
        	End             
        End                                                                                                                          
     	Return math.floor(ret)
     End
End