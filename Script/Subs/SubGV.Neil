// License Information:
// src/Tricky Script/Script/Subs/SubGV.Neil
// Version: 21.03.05
// Copyright (C) 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
#use "script/use/anyway"

global table sgvstring
global table sgvint
global table sgvbool

global void SetGVString(string k,string v)
	cout("Received key: ",k,"; and value ",v,"\t")
	if v==""
		cout("Destroy!\n")
		sgvstring[k:upper()]=nil
		return
	end
	sgvstring[k:upper()]=v
	cout("Defined\n")
end


global void SetGVInt(string k,int v)
	if v==0
		sgvint[k:upper()]=nil
		return
	end
	sgvint[k:upper()]=v
end


global void SetGVBoolean(string k,bool v)
	if not v
		sgvbool[k:upper()]=nil
		return
	end
	sgvbool[k:upper()]=true
end

global void ShowEm()
	//print(serialize("strings",sgvstring)) 
	table collect
	table count = {["bool"]=0, ["string"]=0, ["int"]=0, ["total"]=0 }
	for btype,base in spairs({ ["bool"]=sgvBool,["string"]=sgvstring,["int"]=sgvint})
		print(btype)
		for k,v in spairs(base)
			print(k)
			string c = btype.." "..k.." = "
			if btype=="string"
				c+="'"..v.."'"
			else
				c+=tostring(v)
			end
			collect+=c
			count[btype] += 1
			count.total++
		end
	end
	print("Okay?")
	collect+=sprintf("total bool:     %5d",count[trim(" bool")])
	collect+=sprintf("total integer:  %5d",count[trim(" int")])
	collect+=sprintf("total string:   %5d",count[trim(" string")])
	collect+=        "                ===== +"
	collect+=sprintf("grand total     %5d",count.total)
	print("Okay??",lua.type(collect),lua.type(ipairs),lua.type(ipairs(collect)))
	for i,line in ipairs(collect)
		print("Start",i,line)
		int b = math.floor( (i/#collect)*255 )
		int g = 180
		int r = 255-b
		dev.CWrite(line,r,g,b)
		print("End",i,line)
	end
	print("Okay???")
end

global string Substitute(string ori)
	string ret = ori
	for btype,base in spairs { ["bool"]={sgvBool,"&"},["string"]={sgvstring,"$"},["int"]={sgvint,"%"}}
		for k,v in spairs(base[1])
			ret = replace(ret,base[2]..k,lua.tostring(v))
		end
	end
	return ret
end

global void ClearGV()
	sgvBool = {}
	sgvString = {}
	sgvInt = {}
end

global void SaveGV()
	// The opening is to make sure all variables have been cleared before saving.
	string data = "Init\n\tGV.Clear()\n"
	for btype,base in spairs { ["bool"]=sgvBool,["string"]=sgvstring,["int"]=sgvint}
		for key,value in spairs(base)
			if btype=="bool" and key:upper()=="GJIGNORE"
				data += "//"
			end
			data += "\tgv.v"..btype.."[\""..key.."\"] = "
			if btype=="string"
				data += "\"" .. value .. "\"\n"
			else
				data += tostring(value) .. "\n";
			end
		end
	end
	data += "end\n"
	SaveGame.Data["GameVars.neil"] = data
end