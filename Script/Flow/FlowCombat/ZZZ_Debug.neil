// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Flow/FlowCombat/ZZZ_Debug.neil
// (c) Jeroen Broks, 2021, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 21.10.03
// End License Information
Global Void CONSOLE_Fighters()
	For F,D in sPairs(Fighter.ByTag)
		CSayF("%s (%s) '%s'  (%04d,%04d)",F,D.Team,D.Char.Name,D.X,D.Y)
	End
End

Global Void CONSOLE_AutoScale()
	CSayF("Autoscale X=%f; Y=%f",Screen.AltAutoScale("COMBAT"))
End

Global Void CONSOLE_StageDebug()
	Stage.Current.Debug()
End

Global Void CONSOLE_Kill(victims)
	//print(sprintf("Kill request> \"%s\"",victim || "<Huh?>"))
	string victim
	switch lua.type(victims) 
		case "table"
			for k,v in pairs(victims) 
				print(k,v) 
			end
			victim=victims[1] || "?HUH?"
		case "string"
			victim=victims
	end
	switch victim:upper()
		case "HERO" "HEROES"
			for t,dat in spairs(Fighter.ByTag)
				if dat.Team=="Hero"
					CONSOLE_Kill(t)
				end
			end
		case "FOE" "FOES" "ENEMY" "ENEMIES" "MONSTER" "MONSTERS"
			for t,dat in spairs(Fighter.ByTag)
				if dat.Team=="Foe"
					CONSOLE_Kill(t)
				end
			end
		case "" 
			CSay("I need more input!")
		default
			if Fighter.ByTag[victim]
				Fighter.ByTag[victim].Char.Points.HP.Have = 0
				CSayF("Killed %s!",victim)
			else
				CSayF("Nothing to kill with '%s' as parameter!",victim)
			end
	end
end

Global Void CONSOLE_Points(tags) 
	//print(sprintf("Kill request> \"%s\"",victim || "<Huh?>"))
	string tag
	switch lua.type(tags) 
		case "table"
			for k,v in pairs(tags) 
				print(k,v) 
			end
			tags=tags[1] || "ALL"
		case "string"
			Tag=Tags
	end
	switch tag:upper()
		case "HERO" "HEROES"
			for t,dat in spairs(Fighter.ByTag)
				if dat.Team=="Hero"
					CONSOLE_Points(t)
				end
			end
		case "FOE" "FOES" "ENEMY" "ENEMIES" "MONSTER" "MONSTERS"
			for t,dat in spairs(Fighter.ByTag)
				if dat.Team=="Foe"
					CONSOLE_Points(t)
				end
			end
		case "" "ALL" 
			//CSay("I need more input!")
			for t,dat in spairs(Fighter.ByTag)
				CONSOLE_Points(t)
			end
		default
			Var c = Fighter.ByTag[tag]
			CSayF("- %s %s",c.Team,tag)
			Table t = {"HP","AP"}
			If c.Team=="Hero"
				t+= "VIT"
			End
			For p in each(t)
				var pnt = c.char.points[p]
				//CSayF("Lua.types: %s -- Lua.typemini(%s)(value: '%s') -- Lua.typemaxi(%s) -- Lua.typehave(%s)",p,Lua.type(pnt.Minimum),pnt.Minimum,Lua.type(pnt.Maximum),Lua.type(pnt.Have))
				CSayF("= %s; Min: %06d; Max: %06d; Hav: %06d",p,pnt.Minimum,pnt.Maximum,pnt.Have)
			End
	end
end

