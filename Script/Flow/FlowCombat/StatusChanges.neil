// License Information:
// src/Tricky Script/Script/Flow/FlowCombat/StatusChanges.neil
// Version: 21.12.25
// Copyright (C) 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

#use "Libs/xmath"

Class TStatusChange
	Delegate PreTurn
	Delegate Draw
	Delegate Inflict
	Delegate Cure
	String Defense
	Bool SkipTurn = False
	Bool BlockHeal = False
	
	
	Constructor
		PreTurn = NIKS
	End
End


Module
	ReadOnly Var Register = {}
	
	Var URegister
	
	
	
	Constructor
		// Poison
		Register.Poison = new TStatusChange()
		Void Poison_Preturn(Char)
			int Dmg = 0
			Switch Char.Team
				Case "Foe"
					Switch __skill
						Case 1
							Dmg = Char.HPMax div 4
						Case 2
							Dmg = Char.HPMax div 10
						Case 3
							Dmg = Char.HPMax div 100
						Default
					End
				Case "Hero"
					Switch __skill
						Case 1
							Dmg = Char.HPMax div 25
						Case 2
							Dmg = Char.HPMax div 10
						Case 3
							Dmg = Char.HPMax div 5
						Default
					End
				Default
			End
			charmsg(Char.Tag,SPrintF("Poison Damage: %d",Dmg),0,180,0)
			Char.HP-=Dmg
		End
		Void Poison_Draw(Char)
			Graphics.Color(0,255,0)
		End
		Register.Poison.PreTurn = Poison_Preturn
		Register.Poison.Draw    = Poison_Draw
		
		// Disease
		Register.Disease = New TStatusChange()
		Register.Disease.BlockHeal = true
		Void Disease_Draw(Char)
			Graphics.Color(255,180,0)
		End
		Register.Disease.Draw = Disease_Draw
		
		// Sleep
		Void PreTurnCure(Char,string status)
			Char.StatusChanges[status] = False
		End
		Register.Sleep = New TStatusChange()
		Register.Sleep.PreTurn=PreTurnCure
		Register.Sleep.SkipTurn=True
		Void Sleep_Draw(Char)
			Static Table SinBub = {}
			Static Var Z = Image.LoadNew("GFX/Combat/StatusChanges/Sleep/Z.png","Status_Sleep")
			SinBub[Char.Tag] = ((SinBub[Char.Tag] || math.random(0,180)) + 1) % 180
			Graphics.Scale(xmath.sin(SinBub[Char.Tag])+1,1.5)
			Z.HotBottomCenter()
			Z.Draw(Char.TX,Char.TY-Char.TH-10)
			Graphics.Scale(1,1)
		End
		Register.Sleep.Draw = Sleep_Draw
		
		// URegister
		Var _Get(s,string K)
			Static Var R = {}
			K = K:upper()
			if !R[K]
				for _k,_v in pairs(Register)
					if _k:upper()==K
						R[K]=_v
						break
					end
				end
			end
			Return R[K]
		end
		URegister = Lua.setmetatable({},{["__index"]=_Get})
	End
End