// License Information:
// src/Tricky Script/Script/Flow/FlowCombat/AAA_Fighter.neil
// Version: 22.03.10
// Copyright (C) 2021, 2022 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

Class Fighter
	Static Table ByTag = {}
	Static Table ByTeam = {}
	
	Static Table GetTags(string Team="*")
		Table Ret = {}
		For Tag,Dat in sPairs(ByTag)
			If Team=="*" || Team==Dat.Team
				Ret += Tag
			End
		End
		Return Ret
	End
	
	String Tag
	String Team
	Var Stats
	Int CardResetSpot = 0
	
	
	
	Var StatusChanges
	Var TrueStatusChanges = {}
	
	Var EachStatusChange()
		table work = {}
		for k,_ in spairs(TrueStatusChanges)
			work+=k
		end
		Int i=0
		Var Ret()
			i++
			if i>#work
				return nil,nil
			end
			return work[i],CombatFlow.StatusChanges.URegister[work[i]]
		End
		Return Ret
	End
	
	Void InitStatusChanges()
		TrueStatusChanges = {}
		Void _set(s,string k,v)
			k = k:upper()
			if v
				TrueStatusChanges[k]=true
			else
				TrueStatusChanges[k]=nil
			end
		end
		Var _get(s,string k)
			k = k:upper()
			if TrueStatusChanges[k]
				return CombatFlow.StatusChanges.URegister[k]
			end
		End
		StatusChanges = Lua.setmetatable({},{["__index"]=_get,["__newindex"]=_set})
	End
	
	String Stage = "IDLE"
	
	// This seems useless, but allows me to override in Heros
	Bool _DrawThis = True
	Get Bool DrawThis
		Return _DrawThis
	End
	Set Bool DrawThis
		_DrawThis = Value
	End
	
	Get Var Char
		Return RPGChar[Tag]
	End
	
	Get String Name
		Return Char.Name
	End
	
	Get Int HP
		Return Char.Points.HP.Have
	End
	Set Int HP
		Char.Points.HP.Have = value
	End
	Get Int HPMax
		Return Char.Points.HP.Maximum
	End
	Get Int AP
		If Team=="Hero"
			Return Char.Points.AP.Have
		End
		Return 0
	End
	Set Int AP
		If Team=="Hero"
			Char.Points.AP.Have = value
		End
	End
	Get Int APMax
		Return 0
	End
	Get Int W
		Return 0
	End
	Get Int H
		Return 0
	End
	

	Int X
	Int Y
	
	Final Var TrueCoords()
		Return Screen.AltRectData("COMBAT",X,Y,W,H)
	End
	
	
	Get Int TX
		Int RX
		Int RY
		Int RW
		Int RH
		RX,RY,RW,RH = TrueCoords()
		Return RX
	End
		
	Get Int TY
		Int RX
		Int RY
		Int RW
		Int RH
		RX,RY,RW,RH = TrueCoords()
		Return RY
	End
	
	Get Int TW
		Int RX
		Int RY
		Int RW
		Int RH
		RX,RY,RW,RH = TrueCoords()
		Return RW
	End
	
	Get Int TH
		Int RX
		Int RY
		Int RW
		Int RH
		RX,RY,RW,RH = TrueCoords()
		Return RH
	End

	Set Int TX
		Int RX
		Int RY
		RX,RY = Screen.TrueCoords("COMBAT",Value,0)
		X = RX
	End
	Set Int TY
		Int RX
		Int RY
		RX,RY = Screen.TrueCoords("COMBAT",0,Value)
		Y = RY
	End
	
	
	Abstract Void Draw()
	Abstract Bool Pose(Action)
	
	Static Void ClearAll()
		ByTag = {}
		ByTeam = {["Hero"] = {}, ["Foe"]={} }
	End
	
	Static Void ClearGroup(string _Gr)
		ByTag = {}
		For T,G in pairs(ByTeam)
			If T!=_GR
				For TG,DT in pairs(G)
					ByTag[TG]=DT
				End
			End
		End
		ByTeam[_Gr]={}
	End
	
	// First upper rest lower
	Static String FURL(string s)
		Return (Left(s,1):upper())..(Right(s,#s-1):lower())
	End
	
	Void SetUp(String _Tag,String _Team)
		Tag  = _Tag
		Team = _Team
		ByTag[Tag] = Self
		ByTeam[Team][Tag] = Self
		
		Int _stat_index(s,string Key)
			return Char.Stat["END_"..FURL(Key)]
		End
		Stats = Lua.setmetatable({},{["__index"]=_stat_index})
		CSayF("Created fighter '%s' for team: %s",_Tag,_Team)
	End
	
	Static Void DrawAll(Bool AllowTarget)
		For FTag,FDat in Pairs(ByTag)
			If FDat.DrawThis
				__White
				For k,d in FDat.EachStatusChange()
					If FDat.HP<=0
						FDat.StatusChanges[k]=nil
						Break
					ElseIf d
						Invoke(d.Draw,FDat)
					Else
						Printf("\007WARNING! DrawAll: nil for data received on status: %s\n",k)
					End
				End
				FDat.Draw()
			End
		End
	End
	
End

Return Fighter