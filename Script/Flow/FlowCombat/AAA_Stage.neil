// License Information:
// src/Tricky Script/Script/Flow/FlowCombat/AAA_Stage.neil
// Version: 21.10.02
// Copyright (C) 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Class Stage
	Static Table Map = {}
	Static Var _Current
	Static Get Var Current
		_Current = _Current || Map.IDLE
		return _Current
	End
	Get String FlashChar
		Return ""
	End
	Static Set Var Current
		if Lua.type(Value)=="string"
			_Current = Map[Value:upper()]
			Lua.assert(_Current,"No combat stage called \""..Value.."\" present!")
			CSayF("Combat stage is now set to %s",Value)
		Else			
			_Current = Value || Map.IDLE
		End
		
	End	
	
	Static Void Register(string Name,St)
		Map[name:upper()]=st
		CSayF("Combat Stage %s contains %s",Name,lua.tostring(st))
	End
	
	Void Draw()
	End
	
	Abstract Void Update()
	
	Void Debug()
		CSayF("The current stage has no specific debug")
	End
	
End

Class Stage_IDLE extends Stage
	
	Get Var Cards
		Return FlowCombat.Cards
	End
	
	Get Var FirstCard
		Return FlowCombat.Cards[1]
	End
	
	Void CardCheck()		
		For FTag,FDat in PAIRS(Fighter.ByTag)
			Bool Found = False
			If FDat.HP>0
				For _,C in PAIRS(Cards.Lijst)
					Found = Found || ( (!C.Joker) && (!C.Action) && C.FightTag==FTag )  
				End
				If !Found
					Int spot = ( 25 + (Cards.Order.tagorder[FTag] * 2)+ (math.floor(math.random(1,Cards.Order.tagorder[FTag])/2)) )
					Cards.Add(Spot,FTag)
					CSayF("No cards for %s so automatically added one on spot #%d",FTag,Spot)
				End
			End
		End
	End
		

	Void Update()		
		CardCheck()
		If !Cards.Present(1)
			Cards.DelFirst()
		ElseIf FirstCard.FightTeam=="Hero" && (!FirstCard.Action)
			Lua.Neil.Globals.Stage_PlayerInput_Main.ComeToMe(FirstCard.FightTag)
		End
	End
End

Class Stage_Wait extends Stage
	Int Time
	Void Update()
		Time = (Time+1) % 200
		//CSayF("Wait time: %03d",Time)
		If Time==0
			Stage.Current=nil
		End
	End
End

Init
	Stage.Register("IDLE",new Stage_IDLE())
	Stage.Register("WAIT",new Stage_Wait())
End

Return Stage