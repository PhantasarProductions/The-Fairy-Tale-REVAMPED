// License Information:
// src/Tricky Script/Script/Flow/FlowCombat/Class_Hero.neil
// Version: 21.09.09
// Copyright (C) 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

Class Hero Extends Fighter

	Int Num
	Int AttackFrame = 0
	Const Int AttackFrames = 100
	Const Var Images = {}
	
	Get Bool DrawThis
		return RPGParty[num] == self.Tag
	End

	Static Void Compile(String _Tag)
		Var WHero = new Hero()
		WHero.Setup(_Tag,"Hero")
		WHero.Num = Party.MemNum(_Tag)
		WHero.Y = (((_ASH - 600) div (Party.Count+1)) * WHero.Num) + 500
		WHero.X = (_ASW div 2) + ( ((_ASW div 2) div (Party.Count+1)) * WHero.Num)
	End
	
	Void Draw()
		Static String Format = "GFX/Combat/Fighters/Hero/%s.%s.png"
		String DTag = Self.Stage
		if Self.HP==0
			Self.Stage="KO"
		End
		Switch Self.Stage
			Case "ATTACK"
				DTag = SprintF("Attack.%d",math.max(1,AttackFrame div 3))				
			Case "KO"
				If Self.HP>0
					Self.Stage="IDLE"
				End
			Default
		End
		Image.AltScale("COMBAT",2,2)
		String ITag = self.Tag.."."..DTag
		Images[ITag] = Images[ITag] || Image.LoadNew(SprintF(Format,Self.Tag,DTag),ITag)
		Images[ITag].HotBottomCenter()
		Images[ITag].ASDraw("COMBAT",Self.X,Self.Y)
		Image.AltScale("COMBAT",1,1)
	End
	
End

Bool AAlways()
	Return True
End

// Player Input Menu Item
Class PIMI
	Static Int A
	ReadOnly Int X
	ReadOnly Int Y
	ReadOnly Delegate Allow
	ReadOnly Delegate Action
	ReadOnly Var Icon
	ReadOnly Static Var Lst = new LinkedList()
	Int Alpha
	
	
	Constructor(String _icon,int _x,int _y,_Action,_Allow)
		Lua.assert(Lua.type(_Action)=="function","Function needed for _Action parameter when constructing a PIMI. Now I got a "..Lua.type(_Action).." (".._icon..")")
		X = _x
		Y = _y
		Icon = Image.LoadNew("GFX/Combat/Menu/".._icon..".png","COMBAT_PIMI_"..(_icon:upper()))
		Icon.HotCenter()
		Action = _Action
		Allow = _Allow || AAlways
		Alpha = A
		A -= 100
	End
End

Class Stage_PlayerInput_Main Extends Stage

	Static Table Banners = {}
	Static Table Portraits = {}
	Static Int Alpha 
	Static String Exe
	Static Get Var CEx
		Return Fighter.ByTag[Exe]
	End

	Void Draw()
		Int MdX = Screen.W div 2
		Int MdY = Screen.H div 2
		For P in PIMI.lst.Each
			P.Alpha = math.min(255,P.Alpha+1)
			If P.Alpha>0
				Graphics.SetAlpha(P.Alpha)
				P.Icon.Draw(MdX+P.X,MdX+P.Y)
			End
		End
		Graphics.SetAlpha(Alpha)
		Alpha = math.min(255,Alpha+1)
		__white
		Portraits[Exe].Draw(MdX-250,MdY)
		Banners[Exe].Draw(MdX,MdY-250)
		Graphics.SetAlpha(255)
	End
	
	Void Update()
	End
	
	Static Void ComeToMe(String _Exe)
		Exe = _Exe
		Alpha = 0
		Portraits[Exe] = Image.LoadNew("GFX/BoxText/Portret/"..Exe.."/General.png","PIMI_POR_"..Exe)
		Banners[Exe]   = Image.LoadNew("GFX/Combat/HeroBanners/"..Exe..".png","PIMI_BAN_"..Exe)
		Portraits[Exe].HotCenter()
		Banners[Exe].HotCenter()	
		Stage.Current = "PLAYERINPUT_MAIN"
	End
End
// Laziness!
Const Var SPIM = Stage_PlayerInput_Main

#region PIMI reactions
Void PIMI_Attack()
End

Void PIMI_Ability()
End

Void PIMI_Items()
End

Void PIMI_Spirata()
	Lua.error("Spirata not implemented yet!")
End

Void PIMI_Guard()
End

Bool NotNostra()
	Return SPIM.Exe!="Nostramantu"
End

Bool HasSpirata()
	String Exe = SPIM.Exe
	If Prefixed(Exe,"Jake")
		Exe = "Jake"
	End
	return gv.gbool("HASSPIRATA."..Exe)
End
#endregion


Init
	Stage.Register("PLAYERINPUT_MAIN",new Stage_PlayerInput_Main())
	PIMI.Lst.AddLast(new PIMI("Attack",0,0,PIMI_Attack))
	PIMI.Lst.AddLast(new PIMI("Ability",0,-50,PIMI_Ability,NotNostra))
	PIMI.Lst.AddLast(new PIMI("Spirata",0,50,PIMI_Spirata,HasSpirata))
	PIMI.Lst.AddLast(new PIMI("Items",-50,0,PIMI_Items))
	PIMI.Lst.AddLast(new PIMI("Guard",50,0,PIMI_Guard))
End

Return Foe