// License Information:
// src/Tricky Script/Script/Flow/FlowField/Schedule.neil
// Version: 21.07.21
// Copyright (C) 2020, 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

// Originally created for "Star Story", copied (with a few adaptions) to The Fairy Tale

#use "libs/LinkedList"
#use "script/use/misc/minimessage"

//group GrSchedule
Module

	readonly var Scheduled = new LinkedList("string")
	bool WaitingForMovingActors = false
	string WhenMovingActorsStop = ""
	bool StopRequest = False
	string Continue = ""
	
	Void StopIt(string f)
		Continue = f
		StopRequest = True		
	End
	
	void Schedule(string mpcall)
		Scheduled.AddLast(mpcall)
		CSayF("Scheduled: %s; %d request(s) scheduled in total now",mpcall,Scheduled.Count)
	end
	
	void Add(string mpcall)
		Schedule(mpcall)
	end
	
	void DoScheduled()
		if Scheduled.Count==0
			return
		end
		CSayF("Preparing to get through %d scheduling requests!",Scheduled.Count)
		var t = new LinkedList("string")	
		for s in Scheduled.Each
			t.addLast(s)
		end
		t.AddLast(":IGNOREME:")
		Scheduled.Clear()
		Bool ContAdded = False
		for s in t.Each
			CSayF("Executing scheduled request: %s",s)
			if StopRequest				
				If !ContAdded
					CSay("StopRequest! Continue added")
					t.AddLast(":CONTINUE:")
					ContAdded=True
					If Continue=="SPAWN.GO"
						Spawn.Go()
					ElseIf Continue!=""
						t.AddLast(Continue)
						CSay("Continue event: "..Continue)
					End
				End				
				If s==":CONTINUE:"
					StopRequest = true
					ContAdded=False
					CSay("Continue")
				Else
					CSayF("Skipping: %s",s)
				End
			Elseif prefixed(s,"LOAD:")
				// This basically repeats the request, but now from the field flow, so that's safe! (I hope)
				Map.Load(right(s,#s-5))
			elseif prefixed(s,"MSG:")
				MiniMessage.NewMsg(right(s,#s-4),255,180,0)
			elseif prefixed(s,"SPAWN:")
				Map.SpawnPlayer(right(s,#s-6))
			elseif prefixed(s,"LAYER:")
				Map.Layer=right(s,#s-6)
			elseif s=="SPAWN.GO"
				Spawn.Go()
			elseif s=="SPAWN.RESET"
				Spawn.Reset()
			elseif s==":STOP:"			
				break
			elseif s==":IGNOREME:"
			else 
				Map.Script(s,"nil")
			end
		end
		StopRequest = False
	end
	
	void WaitForMovingActors(string After)
		WaitingForMovingActors=true
		WhenMovingActorsStop = After
	end	
		
end