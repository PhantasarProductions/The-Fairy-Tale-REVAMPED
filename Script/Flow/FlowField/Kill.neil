// License Information:
// src/Tricky Script/Script/Flow/FlowField/Kill.neil
// Version: 21.08.22
// Copyright (C) 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module
	Table TheKills = {}
	
	Void SetPerma(String Tag)
		TheKills[FlowField.Map.LoadedMap] = TheKills[FlowField.Map.LoadedMap] || {}
		TheKills[FlowField.Map.LoadedMap][FlowField.Map.Layer] = TheKills[FlowField.Map.LoadedMap][FlowField.Map.Layer] || {} 
		TheKills[FlowField.Map.LoadedMap][FlowField.Map.Layer] += Tag
	End
	
	Void Kill(String Tag,bool Permanent)
		If Permanent
			SetPerma(Tag)
		End
		If FieldFlow.Map.CurLayer.HasTag(Tag)
			FieldFlow.Map.CurLayer.Kill(Tag)
			CSayF("Killed: %s",Tag)
		Else
			CSayF("Request to kill '%s' ignored (doesn't exist or is already killed)",Tag)
		End
	End
	
	Get String Serialize
		String ret = "Init\n"
		For M,MT in sPairs(TheKills)
			ret += "\tFlowField.Kill.TheKills[\""..M.."\"] = {}\n"
			//For KT in Each(MT)
			For Lay,Victims in sPairs(MT)
				ret += "\t\tFlowField.Kill.TheKills[\""..M.."\"][\""..Lay.."\"] = {}\n"
				For Victim in Each(Victims)
					ret += "\t\tFlowField.Kill.TheKills[\""..M.."\"][\""..Lay.."\"] += \""..Victim.."\"\n"
				End
			End
		End
		ret +="End\n"
		Return Ret
	End
	
	Void LG()
		NeilDoString(SaveGame.Data["PERMAKILLS.NEIL"],"SG:PermaKills.Neil")
		For LN,KL in sPairs(TheKills[FlowField.Map.LoadedMap] || {})
			For Victim in Each(KL)
				If FlowField.Map.KthuraMap.Layer(LN).HasTag(Victim)
					FlowField.Map.KthuraMap.Layer(LN).Kill(Victim)
					CSayF("LOAD> Killed: %s",Victim)
				Else
					CSayF("LOAD> Request to kill '%s' ignored (doesn't exist or is already killed)",Victim)
				End
			End
		End
	End
End