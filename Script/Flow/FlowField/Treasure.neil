// License Information:
// src/Tricky Script/Script/Flow/FlowField/Treasure.neil
// Version: 22.02.13
// Copyright (C) 2021, 2022 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module

	Table RandomItems
	ReadOnly Var ChaChing = Audio.Obtain("CHACHING")

	Void CBLoadMap()
		RandomItems = {}
		For TItem in Each(Split(FlowField.Map.KthuraMap.Meta.RandomItems,";"))
			Table  SItem = Split(TItem,",")
			Var    NItem = SItem[1]:upper()
			Int    NRate = Lua.tonumber(TItem[2] || "1") || 1
			If Prefixed(NItem,"CASH:") 
				NItem = math.max(Lua.tonumber(Right(NItem,#NItem-5)) || 1,1)
			End
			For I=1,NRate
				RandomItems += NItem
			End
		End
	End

	Void RandomItem(String Tag)
		Int FCnt=0
		Int FRte=0
		Bool IsDone=False
		String Msg=""
		Repeat
			Var N=RandomItems[math.random(1,#RandomItems)]
			Switch Lua.type(N)
				Case "string"
					N="ITM_"..N
					FCnt = (FCnt+1)%10
					If FCnt==0
						FRte++
					End
					If math.random(1,100)<FRte
						N=1
						Msg="1 shilder obtained"
						Item.Cash++
						Done=true
						ChaChing.Play()
					Else
						IsDone=Item[N].Give						
						Msg=Item[N].Title.." obtained"						
					End
				Case "number"
					If N==1
						Msg="1 shilder obtained"
					Else
						Msg=SPrintF("%d shilders obtained",N)
					End
					ChaChing.Play()
					Item.Cash += N
				Default
					Lua.error("Unknown treasure kind!")
			End
		Until IsDone				
		CSay(Msg)
		Var O = FlowField.Map.CurLayer.Obj(Tag)
		FlowField.Msg(Msg,O.X,O.Y,255,180,0)
		Map.Kill(Tag,math.random(1,__skill^2)!=1)
	End
	
	Void OChest(String Tag)
		Var O = FlowField.Map.CurLayer.Obj(Tag)
		O.AnimFrame=1
		FlowField.Kill.SetPerma(Tag)
	End
	
	Void Chest(String Tag)		
		Static Var Prefixes = {"ITM_","EQP_","ZZKEY_","WAND_"}
		Var O = FlowField.Map.CurLayer.Obj(Tag)
		If O.AnimFrame>=1
			Return
		End
		String ITag = O.Data["ITEM"]:upper()
		String RTag = O.Data["REQUIREDITEM"]:upper()
		If ITag==":MIMIC:" || ITag==":MIMIC"
			If Suffixed(Map.LoadedMap,"NOSTRAMANTUMANSION")
				Static Var Laugh = Audio.LoadNew("Audio/SFX/Nostramantu/Laugh.ogg","MIMIC_NOSTRAMANTU_EVIL_LAUGH")
				Laugh.Play()
			End
			FlowField.Map.StopWalking()
			FlowField.Msg("Mimic",O.X,O.Y,0,180,255)
			OChest(Tag)
			Combat.Prepare(255,0,0)
			Combat.Arena=FieldFlow.Map.KthuraMap.Meta.Arena
			pLua aet = FieldFlow.Map.KthuraMap.Meta.AltEncounterTune
			If aet and aet!=""
				if ! suffixed(aet:lower(),".ogg")
					aet += ".ogg"
				end
				CSayF("= Alt combat tune: %s (%s)",aet,Lua.type(aet))
				Combat.Music = aet
			Else
				Combat.Music = "*RANDOM"
			End
			Combat.NewEnemy="REG/MIMIC"			
			Combat.Start()
			Return
		ElseIf RTag!=""			
			If Item[RTag].Has==0
				Bool Allow = False
				Static Var SPar = {"Jake_Human","Marrilona","Dandor","HandoStillor"}
				for Ch in Each(SPar)
					string Weapon = RPGChar[ch].Data.EQUIP_Weapon
					String Armor  = RPGChar[ch].Data.EQUIP_Armor
					CSayF("Checking equipment of char %s: Weapon=%s; Armor=%s",Ch,Weapon,Armor)
					Allow = Allow || (Weapon:upper()==RTag)
					Allow = Allow || ( Armor:upper()==RTag)
				End
				If !Allow
					FlowField.Msg("Treasure chest is locked!",O.X,O.Y,255,0,0)
					Return
				End
			End
		End
		If Prefixed(ITag,"CASH:")
			Int N = Lua.tonumber(Right(ITag,#ITag-5)) || 1
			String Msg
			If N==1
				Msg="1 shilder obtained"
			Else
				Msg=SPrintF("%d shilders obtained",N)
			End
			FlowField.Msg(Msg,O.X,O.Y,0,180,255)
			ChaChing.Play()
			Item.Cash += N
			OChest(Tag)
			Return
		End
		For P in Each(Prefixes)
			CSayF("Prefix check %s ... %s prefixed => %s",P,ITag,Lua.tostring(Prefixed(ITag,P)))
			If Prefixed(ITag,P)
				If Item[ITag].Give
					OChest(Tag)
					FlowField.Msg(Item[ITag].Title.." obtained",O.X,O.Y,255,180,0)					
				Else
					FlowField.Msg(Item[ITag].Title.." overloaded!",O.X,O.Y,255,0,0)					
				End
				Return
			End
		End		 
		ITag = "ITM_"..ITag
		If Item[ITag].Give
			OChest(Tag)
			FlowField.Msg(Item[ITag].Title.." obtained",O.X,O.Y,255,180,0)
		Else
			FlowField.Msg(Item[ITag].Title.." overloaded!",O.X,O.Y,255,0,0)
		End
	End
	
End