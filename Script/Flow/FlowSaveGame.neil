// License Information:
// src/Tricky Script/Script/Flow/FlowSaveGame.neil
// Version: 22.03.17
// Copyright (C) 2021, 2022 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

#use "Script/Use/Anyway"
#use "Script/Use/Misc/PSaveGame"

Const Int MaxPerPage = 24
Const Int RowSize = 4
ReadOnly Var Back = Image.Obtain("BACKGROUND")
ReadOnly Int TileSize = math.min(Screen.W,Screen.H) div ((MaxPerPage div RowSize) + 3)
ReadOnly Var TFont = ImageFont.Obtain("BIGTEXT")
ReadOnly Var SFont = ImageFont.Obtain("FNTSBAR")
ReadOnly Var Up = Image.Obtain("UP")
ReadOnly Var Down = Image.Obtain("DOWN")

ReadOnly Table ImgHeader = { ["SAVE"]=Image.Load("GFX/Logo/Save Game.png"), ["LOAD"]=Image.Load("GFX/Logo/Load Game.png") }
ReadOnly Var Saving = Image.Load("GFX/Loading/Saving.png")
ReadOnly Table Faces = {}
String Situation = "SAVE"

Var Marrilona 
Int MarrilonaH
Int MarrilonaW

Table HasSave = {}

Global Int Page = 1
Global Table PageNames = {}




Void GetMarrilona()
	Switch OS.date("%m/%d")
		Case "01/11"
			Marrilona = Image.Load("GFX/Big_Char/Marrilona_NewYear.png")
		Case "02/14"
			Marrilona = Image.Load("GFX/Big_Char/Marrilona_Valentine.png")
		Case "02/15" "02/16" "02/17" "02/18" "02/19" "02/20" "02/21" "02/22" "02/23" "02/24" "02/25" "02/26" "02/27" "02/28" "02/29" "03/11" "03/12" "03/13" "03/14" "03/15" "03/16" "03/17" "03/18" "03/19" "03/10" "03/11" "03/12" "03/13" "03/14"
			Marrilona = Image.Load("GFX/Big_Char/Marrilona_Clown.png")
		Case "04/27"
			Marrilona = Image.Load("GFX/Big_Char/Marrilona_King.png")
		case "06/19"
			Marrilona = Image.Load("GFX/Big_Char/Marrilona_Jarig.png")
		Case "04/11" "04/12" "04/13" "04/14" "04/15" "04/16" "04/17" "04/18" "04/19" "04/10" "04/11" "04/12" "04/13" "04/14" "04/15" "04/16" "04/17" "04/18" "04/19" "04/20"
			Marrilona = Image.Load("GFX/Big_Char/Marrilona_Easter.png")
		Default
			Switch OS.date("%m")
				Case "03"
					Marrilona = Image.Load("GFX/Big_Char/Marrilona_Easter.png")
				Case "10"
					Marrilona = Image.Load("GFX/Big_Char/Marrilona_Halloween.png")
				Case "12"
					Marrilona = Image.Load("GFX/Big_Char/Marrilona_Christmas.png")
				Default
					Marrilona = Image.Load("GFX/Big_Char/Marrilona.png")
			End
	End
	//MarrilonaH = math.floor( (Screen.H / Marrilona.Height) * (Screen.H-10) )
	MarrilonaH = Screen.H-10
	MarrilonaW = math.floor( (MarrilonaH /Marrilona.Height) * Marrilona.Width )
	CSayF("Marrilona Size: %dx%d",MarrilonaW,MarrilonaH)
End

Void RenewPage()
	For i=0,MaxPerPage-1
		Table h = GetHeader(Page,i)		
		HasSave[i] = h.Map!=nil
	End
End

Void SavePage()
	CSay("Generating page name output data")
	string os = "// Generated\n\nInit\n"
	os += sPrintF("\tPage = %9d\n",Page)
	For i,name in pairs(PageNames)
		os += sPrintF("\tPageNames[%9d] = \"%s\"\n",i,name)
	End
	os += "End\n\n"
	CSay("Saving page data")
	SaveGame.SaveIndieString("Pages.neil",os)
End

Global Void Apollo_Flow()
	Static Int PgX
	Static Int PuY=20
	Static Int PdY=Screen.H-80	
	Int Hover = -1
	Dev.ToConsole()
	__White
	Back.Tile(0,0,Screen.W,Screen.H)
	Var HI = ImgHeader[Situation]
	//Int HH = RowSize-3
	//Int HW = math.ceil((HH/HI.Height)*HI.Width)
	//HI.Stretch((Screen.W div 2)-(HW div 2),1,HW,HH)
	HI.Draw(Screen.W div 2,2)
	__white
	Marrilona.Stretch(Screen.W-MarrilonaW,5,MarrilonaW,MarrilonaH)	
	For i=0,MaxPerPage-1
		Int Row = i div RowSize
		Int Col = i % RowSize
		Int X = (Col * Math.floor(TileSize * 1.25)) + (Row+5)
		Int Y = math.ceil((Row+0.25) * Math.floor(TileSize * 1.25) + (Col * (TileSize Div (RowSize+2))))
		PgX = math.max(PgX,X+TileSize+10)
		If Mouse.MX>=X && Mouse.MY>=Y && Mouse.MX<=X+TileSize && Mouse.MY<=Y+TileSize
			Hover = i
			__Ember
		Else
			Graphics.Color(0,80,0)
		End
		Graphics.Rect(X,Y,TileSize,TileSize)
		__White
		If HasSave[i]
			Faces[(i%#Faces)+1].Stretch(X,Y,TileSize,TileSize)
		End
	End
	If Hover>=0
		__White
		Int X = (RowSize+1) * Math.floor(TileSize * 1.25)
		Int Y = 150
		If X<(Screen.W)-500 && Screen.H>500
			If HasSave[Hover]
				Var H = GetHeader(Page,Hover)				
				TFont.Text(H.Map,X,Y)
				//cout(serialize("Header["..Hover.."]",H))
				Y += 300
				For i=1,4
					//If RPGParty[i]!=""
					If H["P"..i]
						Table PS = Split(H["P"..i],"=")
						__White
						//Party.Portrait(RPGParty[i],X+(i*110),Y)
						Party.Portrait(PS[1],X+(i*110),Y)
					End
				End
				y+=50
				If Trim(H.Chapter || "0")=="0"
					sFont.Text("Prologue",X,Y)
				Else
					sFont.Text(SPrintF("Chapter: %s",H.Chapter),X,Y)
				End
				Y+=25
				sFont.Text(SPrintF("Saved: %s",H.Saved),X,Y)
				y+=25
				sFont.Text(SPrintF("%s mode",H.Difficulty),X,Y)
			End
		End
	End
	If Mouse.ML
		If Hover>=0 
			SavePage()
			String SG_File = GetSGFileName(Page,Hover)
			Switch Situation
				Case "SAVE"
					Graphics.Cls()
					Saving.HotCenter()
					Saving.Draw(Screen.W div 2,Screen.H div 2)
					Graphics.Flip()
					Events.Poll()
					PerformSaveGame(SG_File)
					RenewPage()
					Flow.Current="FIELD"
				Case "LOAD"
					If (HasSave[hover])
						PerformLoadGame(SG_File)
						Flow.Current="FIELD"
						Situation="SAVE"
					End
				Default
					Lua.error("Unknown sg situation: "..Situation)
			End				
		End
		If Mouse.MX>PgX && Mouse.MX<PgX+40
			CSayF("Click Scroll! (%d,%d)",Mouse.MX,Mouse.MY)
			If Mouse.MY>PuY && Mouse.MY<PuY+40 && Page>1
				Page--
				RenewPage()
			End
			If Mouse.MY>PdY && Mouse.MY<PdY+40 && Page<999999
				Page++
				RenewPage()
			End
		End
	End
	If Page>1
		Up.Draw(PgX,PuY)		
	End
	If Page<999999
		Down.Draw(PgX,PdY)
	End
	PageNames[Page] = PageNames[Page] || sPrintf("Page: %06d",Page)
	sFont.Text(PageNames[Page],Screen.W div 2,Screen.H-5,2,1)
	Int Ch=Events.GetChar()
	if Ch>=32 && Ch<=127 && #PageNames[Page]<40
		PageNames[Page] += Chr(Ch)
	ElseIf Ch==8 && PageNames[Page]!=""
		PageNames[Page] = Left(PageNames[Page],#PageNames[Page]-1)
	End
	If Events.KeyHit(27) || Mouse.MR
		Switch situation:upper()
			Case "LOAD"
				Flow.Current="MAINMENU"
			Case "SAVE"
				Flow.Current="FIELD"
			Default
				Lua.error("Unknown cancel situation: "..situation)
		End			
	End
	Mouse.Draw()	
End

Global Void WantLoad()
	Situation = "LOAD"
End

Init
	GetMarrilona()
	For _,I in pairs(ImgHeader)
		I.Hot(I.Width div 2,0)
	End
	For F in Each { "Jake", "Marrilona", "Dandor", "Hando Stillor",   "Harry", "Sandra", "Fandalora", "Sasha Funda",  "Chief Werrington", "Cherry", "Feenalaria", "Nostramantu" }
		Faces += Image.Load("GFX/BoxText/Portret/"..F.."/General.png")
	End
	plua s = SaveGame.LoadIndieString("Pages.neil")
	NeilDoString(s || "Init\nEnd\n")
	RenewPage()
	PageNames[page] = PageNames[page] || sprintf("Page: %09d",page)
End