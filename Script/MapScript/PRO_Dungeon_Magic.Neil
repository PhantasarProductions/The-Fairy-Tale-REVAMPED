// License Information:
// **********************************************
// 
// src/Tricky Script/Script/MapScript/PRO_Dungeon_Magic.Neil
// (c) Jeroen Broks, 2021, 2022, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 22.03.23
// End License Information

#use "Libs/XMath"
#use "Script/Use/Anyway"


#macro PuzSolved gv.gbool.Prologue_Marrilona_MagicSubSpace_Puzzle_Solved

Group MScript

	#region Plasma & Teleporters
	ReadOnly Bool HasDraw   = True
	ReadOnly Bool HasUpdate = True
	
	Void Update()
		Static Int Deg
		Deg = (Deg + 1) % 360
		Map.SetObj("Obstacle_Next","Rotation",Deg)
		If Map.Layer=="#004"
			Self.BarrierLift()
		End
	End
	
	ReadOnly Delegate PostDraw = NIKS
	
	Void PreDraw()
		Blop.Draw()
	End
	#region
	
	#region Puzzle
	Table PuzzTab = {False, False, False, False, True}
	Void Check()
		Bool S = true
		For i=1,5
			If PuzzTab[i]
				Map.SetObj("Z"..i,"R",255)
				Map.SetObj("Z"..i,"B",0)
			Else
				Map.SetObj("Z"..i,"B",255)
				Map.SetObj("Z"..i,"R",0)
			End
			S = S && PuzzTab[i]
			
		End
		If S
			PuzSolved = true
			For i=1,5
				Map.Kill("Z"..i,true)
			End
		End
	End
	
	Void Z1()
		PuzzTab[1] = !PuzzTab[1]
		PuzzTab[5] = !PuzzTab[5]
		Check()
	End
	Void Z2()
		PuzzTab[2] = !PuzzTab[2]
		PuzzTab[5] = !PuzzTab[5]
		Check()
	End
	Void Z3()
		PuzzTab[3] = !PuzzTab[3]
		PuzzTab[5] = !PuzzTab[5]
		Check()
	End
	Void Z4()
		PuzzTab[4] = !PuzzTab[4]
		PuzzTab[5] = !PuzzTab[5]
		Check()
	End
	Void Z5()
		For i = 1,5 
			PuzzTab[i] = !PuzzTab[i]
		End
		Check()
	End
	Void BarrierLift()
		Static Int A = 0
		If PuzSolved
			A = math.min(255,A+1)
			Map.SetObj("Barrier","Alpha",A)
			Map.SetObj("Barrier","ForcePassible",A>=255)
		End
	End
	
	#endregion
	
	#region The End
	Void NPC_ManaOrb()
		MapText("ORB")
		Map.GoToMap("PRO_Town_Frendor","ELDER","Marrilona")
		Schedule.Add("ElderManaOrb")
	End
	#endregion
	
	Void ResetRespawn()
		print("Resetting respawn at the start of the path of magic")
		Respawn.Reset()
		Map.Kill("ResetRespawn")
	End
	
	
	Constructor
		Blop.Create(80)
		For i=1,5
			ZA.Enter("Z"..i)
		End
		ZA.Enter("ResetRespawn")
	End
	
End