// License Information:
// **********************************************
// 
// src/Tricky Script/Script/MapScript/CH3_Dungeon_MtPyrus.neil
// (c) Jeroen Broks, 2022, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 22.02.03
// End License Information

#region use
#use "Script/Use/Anyway"
#use "Script/Use/Misc/TexMove"
#use "Script/Use/Misc/SlidePuzzle"
#endregion

Group MScript

	ReadOnly Bool HasDraw   = False
	ReadOnly Bool HasUpdate = True
	
	Var Slide
	
	Void Update()
		Static Int Least = 10000
		Least = math.min(Least,FPS.FN())
		If Least>20
			TexMove.Update()
		End
		if Slide && !gv.gbool["PyrusDone"..Map.Layer]
			Switch Map.Layer
				case "#004" 
					if Slide.Good
						Audio.LoadNew("Audio/SFX/Solved.ogg","SOLVED").Play()
						gv.gbool["PyrusDone"..Map.Layer]=true
						for i=1,4
							Map.Kill("Puz_Rem"..i)
							RPGChar[RPGParty[i]].Stat.Experience -= 900 div __skill
						end
						gv.gbool.FollowTheLeaderOff = false
						Self.PuzzleNoButtons()
						Map.Kill("Puzzle",true)
					end
				case "#010"
					if Slide.Good
						Audio.LoadNew("Audio/SFX/Solved.ogg","SOLVED").Play()
						gv.gbool["PyrusDone"..Map.Layer]=true
						for i=1,14
							Map.Kill("Puz_Rem"..i)
						end
						for i=1,4
							RPGChar[RPGParty[i]].Stat.Experience -= 1600 div __skill
						end
						gv.gbool.FollowTheLeaderOff = false
						Self.PuzzleNoButtons()
					end
				default
			end
		End
	End
	
	#region Start room
	Void InitSchuif()
		string OL = Map.Layer
		plua SchuifX = { [true]="Enter", [false]="Next" }
		Map.Layer="#000" //Maps.GoToLayer("#000")
		Map.SetObj("Schuif","X",Map.GetObjInt("Schuif"..SchuifX[GV.GBOOL["DONE.PYRUS.ENTER"]],"X") + 32) //Maps.Obj.Obj("Schuif").X=Maps.Obj.Obj("Schuif"..SchuifX[GV.GBOOL("&DONE.PYRUS.ENTER")]).X + 32
		Map.SetObj("Schuif","Y",Map.GetObjInt("Schuif"..SchuifX[GV.GBOOL["DONE.PYRUS.ENTER"]],"Y")     ) //Maps.Obj.Obj("Schuif").Y=Maps.Obj.Obj("Schuif"..SchuifX[GV.GBOOL("&DONE.PYRUS.ENTER")]).Y
		Map.Layer = OL
	End
	
	Void ZAStart()
		if Done["DONE.PYRUS.WELCOME"]
			return
		end
		Map.Pop("S_","North",true)
		MapText("Start")
	End
	
	Void NPC_Ramata()
		MapText("Ramata")
	End 
	
	Void EnterCave()
		If Done.MtPyrus_CaveEntered
			Return
		End
		//local schuif = Maps.Obj.Obj("Schuif")
		//local doel   = Maps.Obj.Obj("SchuifEnter")
		//Actors.MoveToSpot("PLAYER","Disappear")
		//Actors.MoveToSpot("PLAYER1","Disappear")
		//Actors.MoveToSpot("PLAYER2","Disappear")
		//Actors.MoveToSpot("PLAYER3","Disappear")
		//plua players = { Actors.Actor("PLAYER"),Actors.Actor("PLAYER1"),Actors.Actor("PLAYER2"),Actors.Actor("PLAYER3")}
		plua players = {"PLAYER","PLAYER2","PLAYER3","PLAYER4"}
		plua Schuif = Map.GetObjInt("Schuif","X")
		int  DoelX  = Map.GetObjInt("SchuifEnter","X")
		Map.StopWalking()
		repeat
			Graphics.Cls()
			//schuif.X = schuif.X - 1
			Schuif--
			Map.SetObj("Schuif","X",Schuif)
			Map.DrawScreen()
			Graphics.Flip()
			Events.Poll()
			FPS.WaitMinTicks()
			for a in each(players) 
				//if a.Y<32 then a.Visible=0 end
				Map.SetObj(a,"Y",Map.GetObjInt(a,"Y")-4)
				Map.SetObj(a,"Visible",Map.GetObjInt(a,"Y")>96)
			end
		//until schuif.X==doel.X+32
		until schuif<=doelX+32
		FPS.Sleep(1000)
		Map.Kill("NPC_Ramata",true)
		Map.GoToLayer("#002","Start")
		//Done("&DONE.PYRUS.ENTER")
		//Var.Clear("$SYS.RESPAWN")
		Respawn.Reset()
	End
	#endregion
	
	#region Schuifpuzzles		
	Void Puzzle()
		If gv.gbool["PyrusDone"..Map.Layer]
			CSay("Puzzle already done on this floor!")
			Return
		End
		Map.Pop("Fr_","South",true)
		gv.gbool.FollowTheLeaderOff = true
		Slide = Slide || new SlidePuzzle(5,"Slide")
		Slide.Reset()
		Slide.Start(1+__skill)
	End
	
	Void LeavePuzzle()
		gv.gbool.FollowTheLeaderOff = false
	End
	
	Void PuzzleNoButtons()
		For l in each{"U","D","L","R"}
			for i=1,5
				Map.Kill(l..i,true)
			end
		End
	End
	#endregion
	
	#region The Four Monks From Hell
	Void MonksFromHell()
		Map.Kill("MonksFromHell",true)
		Combat.Boss("Helena, Eduard, Lucy and Leonnard","The 4 Monks From Hell")
		Combat.Arena = Lua.Neil.Globals.Map.Arena
		Combat.Music = "Combat/SpecialBoss/Volatile Reaction.ogg"
		Combat.Lose = "GameOver"
		For i=1,4
			Combat.NewEnemy = "Boss/MONK"..i
			Map.Kill("MONK"..i,true)
		End		
		Lua.Neil.Globals.Map.StopWalking()
		Combat.Start()
	End
	#endregion
	
	#region The Black Dragon
	Void Crater()
		Music.Play("music/sys/silence.ogg")
		Lua.Neil.Globals.Map.StopWalking()
		Combat.Prepare(100,0,180,"Mindless destroyer of anything and everything","The Black Dragon")
		ISSet("String","FLOW_COMBAT","FLowCombat.Start.Lose","GameOver")
		Combat.Arena = Lua.Neil.Globals.Map.Arena
		Combat.Music = "Combat/SpecialBoss/Threat.ogg"
		Combat.NewEnemy = "Boss/Black Dragon"
		Combat.StartEvent = "StartDragon"
		Combat.Start()
		Combat.Joker(15+(__skill*5),"BlackDragon")
		Schedule.Add("PostDragon")
	End
	
	Void StartDragon()
		If __skill<3
			gv.gInt.MarFeena_HP += 300 - (__skill*100)
		End
		RPGChar.FOE001.Points.HP.Minimum = 1
		MapText("BLACK_DRAGON","FLOW_COMBAT")
	End
	
	Void PostDragon()
		Map.GoToMap("CH3_Hub_FrendorGrave","GRAF","Start_Frendor")
		WorldMap.Unlock("CH3FRENDORGRAVE")
	End
	#endregion
	
	Constructor
		InitSchuif()
		TexMove.MagicBackSetup(0,12,{})
		ZA.TabEnter{"ZAStart","EnterCave","Puzzle","Crater"}
		ZA.Enter("4MonksFromHell","MonksFromHell")
		ZA.Enter("Puzzle10","Puzzle")
		ZA.Leave("Puzzle","LeavePuzzle")
		ZA.Leave("Puzzle10","LeavePuzzle")
	End
End