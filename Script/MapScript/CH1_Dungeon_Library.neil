// License Information:
// **********************************************
// 
// src/Tricky Script/Script/MapScript/CH1_Dungeon_Library.neil
// (c) Jeroen Broks, 2021, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 21.12.25
// End License Information

#use "Script/Use/anyway"

Group TrueScript

	ReadOnly Bool HasDraw   = False
	ReadOnly Bool HasUpdate = True
	
	ReadOnly Table Puzzle
	ReadOnly Table Shelves = {["#003"]=6,["#004"]=3,["#005"]=4}
	
	Int KastSkipFrame = 0
	
	Void Update()
		 KastSkipFrame = math.ceil(0,KastSkipFrame-1)
	End
	
	Var InitPuzzle(L)
		Var R = {}
		CSayF("Generating puzzle for room '%s'",L)
		For i=1,Shelves[L]
			Int T = math.random(1,9)
			R[i] = {["Tag"]=sprintf("%d_%d",math.random(1,4),T),["Num"]=T}
			CSayF("= Bookshelf %d, number %d",i,T)
		End
		Int Goed 
		Switch L
			case "#003"
				Int Goed
				for k in each(R)
					Goed += k.Num
				end
				R.Goed = Lua.tostring(Goed)
			case "#004"
				Int Goed
				for k in each(R)
					Goed = Goed * k.Num
				end
				R.Goed = Lua.tostring(Goed)
			case "#005"
				String Goed
				for k in each(R)
					Goed += k.Num
				end
				R.Goed = Goed
			Default
				Lua.error("No kind of puzzle solution known for room: "..L)
		End
		CSayF("Puzzle generated for room '%s'. And the correct answere here will be '%s'",L,R.Goed)
		//print(Serialize("Ret",R))
		Return R
	End
				
	
	Void GoToRoom(String R)
		String L = "#"..R
		Map.GoToLayer(L,"Start")
		Puzzle[L] = Puzzle[L] || InitPuzzle(L)		
	End
	
	Void Exit()
		String L = Map.Layer
		Map.GoToLayer("#002","From"..right(L,#L-1))
	End
	
	Void ShowWalda()
		Map.ShowByLabel("Walda")
	End
	
	Void HideWalda()
		Map.HideByLabel("Walda")
	End
	
	Void Kast(string n)
		If KastSkipFrame>0
			CSayF("Kast request ignored! Wait %d more frame(s)",KastSkipFrame)
			Return
		End
		String L = Map.Layer
		Puzzle[L] = Puzzle[L] || InitPuzzle(L)
		Var nn = Lua.tonumber(n)
		Lua.assert(nn,sprintf("I could not properly turn string '%s' into a number (%s %s)",n,Lua.type(nn),Lua.tostring(nn)))
		//print(serialize("Puzzle",Puzzle))
		MapText(Puzzle[Map.Layer][nn].Tag)
		KastSkipFrame = 6
	End
	
	
	Constructor
		For i=3,5
			ZA.Enter(sprintf("To%03d",i))
		End
		ZA.TabEnter{"Exit","ShowWalda","HideWalda"}
		ZA.Enter("ShowWalda2","ShowWalda")
		String O = Map.Layer
		Map.Layer = "#002"
		Map.HideByLabel("Walda")
		Map.Layer = O
	End
End

QuickMeta MScript
	Index
		If Prefixed(Key,"To") 
			TrueScript.GoToRoom(Right(Key,#Key-2))
			Return NIKS
		Elseif Prefixed(Key,"NPC_Kast")
			CSayF("Shelf tagged '%s' activated",Key)
			Map.StopWalking()
			TrueScript.Kast(Right(Key,1))
			Return NIKS
		ElseIf Key=="NPC_Walda"
			return NeilUse("Script/Use/Misc/Walda")
		Else
			//CSayF("TrueScript.%s",key)
			Return TrueScript[Key]
		End
	End
End